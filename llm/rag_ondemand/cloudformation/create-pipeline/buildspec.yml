version: 0.2
env:
  shell: bash
phases:
  pre_build:
    commands:
      - PROJECT_NAME=rag_ondemand # Used build path to source files.
      - ECR_REPO=ecs1                 # Name of ECR image repository.
      - DOCKER_IMAGE_NAME=rag_ondemand     # Name of Tracker Docker image.
      - ECR_MAIN_URI="${AWS_ACCT}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - ECR_IMG_NAME=${ECR_REPO}:${DOCKER_IMAGE_NAME}
      - ECR_IMAGE_URI=${ECR_MAIN_URI}/${ECR_REPO}:${DOCKER_IMAGE_NAME}
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_MAIN_URI}
  build:
    commands:
      - echo "S3_BUCKET=${S3_BUCKET}\nAWS_KEY=${AWS_KEY}\nAWS_SECRET=${AWS_SECRET}\nOPENAI_API_KEY=${OPENAI_API_KEY}" > ./llm/${PROJECT_NAME}/docker/.env
      - docker build -t ${ECR_IMG_NAME} ./llm/${PROJECT_NAME}/docker
      - aws cloudformation package --template ./llm/${PROJECT_NAME}/cloudformation/create-app/template.yaml --s3-bucket a-unique-artifact-bucket-name --output-template-file packaged-template.yaml
      - npm -v
      - npm install --prefix ./llm/${PROJECT_NAME}/clients/react
      - npm run build --prefix ./llm/${PROJECT_NAME}/clients/react
  post_build:
    commands:
      - docker tag ${ECR_IMG_NAME} ${ECR_IMAGE_URI}
      - docker push ${ECR_IMAGE_URI}
      - aws s3 cp --recursive ./llm/${PROJECT_NAME}/clients/react/dist s3://a-unique-public-bucket-name
artifacts:
  files:
    - packaged-template.yaml