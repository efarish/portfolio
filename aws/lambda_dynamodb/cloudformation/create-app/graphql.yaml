AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: The template used for GraphQL API.

Parameters:
  ProjectName:
    Type: String
  HTTPApiGWAppId:
    Type: String
  LambdaFunctionArn:
    Type: String

Resources:
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub "${ProjectName}_GraphQL"
      AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLoggingServiceRole.Arn
        FieldLogLevel: INFO

  AppSyncLoggingServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs'

  GraphQLApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId

  AppSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Definition: |
        type User {
          user_name: ID
          role: String
          password: String
        }

        type Mutation {
          createUser(user_name: ID!, role: String!, password: String!): User
        }

        type Query {
          # Get a single value of type 'Post' by primary key.
          getUser(user_name: ID!): User
        }

        schema {
          query: Query
          mutation: Mutation
        }

  AppSyncLambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource: 
                  - !Ref LambdaFunctionArn

  LambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Name: !Sub ${ProjectName}_LambdaDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !Ref LambdaFunctionArn

  GetPresignedUrlResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      TypeName: Query
      FieldName: getUser
      DataSourceName: !GetAtt LambdaDataSource.Name

  ApiGatewayGraphQLIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      IntegrationType: HTTP_PROXY
      IntegrationMethod: POST
      IntegrationUri: !GetAtt GraphQLApi.GraphQLUrl
      PayloadFormatVersion: '1.0'
      Description: "API GW Integration with AppSync GraphQL API"

  APIRouteGraphQL:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      RouteKey: 'POST /get_user_gql'
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayGraphQLIntegration
          
Outputs:
  GraphQLAPIURL:
    Description: URL of the GraphQL API
    Value: !GetAtt GraphQLApi.GraphQLUrl