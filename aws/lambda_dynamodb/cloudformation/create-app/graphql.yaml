AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: The template used for GraphQL API.

Parameters:
  ProjectName:
    Type: String
  HTTPApiGWAppId:
    Type: String
  AppFunctionsArn:
    Type: String
  LambdaAuthArn: 
    Type: String
  LambdaAuthAlwaysArn: 
    Type: String 

Resources:

  AppSyncLoggingServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs'

  AppSyncLambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource: 
                  - !Ref AppFunctionsArn
                  - !Ref LambdaAuthArn
                  - !Ref LambdaAuthAlwaysArn

# APIs THAT REQUIRE AUTHORIZATION #################################
  GraphQLApiAuthorized:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub "${ProjectName}_GraphQLAuth"
      AuthenticationType: AWS_LAMBDA
      LambdaAuthorizerConfig:
        AuthorizerUri: !Ref LambdaAuthArn
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLoggingServiceRole.Arn
        FieldLogLevel: INFO
        
  AppSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLApiAuthorized.ApiId
      Definition: |
        type User {
          user_name: ID
          role: String
          password: String
        }

        type Query {
          # Get a single value of type 'Post' by primary key.
          getUser(user_name: ID!): User
        }

        schema {
          query: Query
        }

  LambdaAuthorizedDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApiAuthorized.ApiId
      Name: !Sub ${ProjectName}_LambdaAuthDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !Ref AppFunctionsArn

  GetUserUrlResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSchema
    Properties:
      ApiId: !GetAtt GraphQLApiAuthorized.ApiId
      TypeName: Query
      FieldName: getUser
      DataSourceName: !GetAtt LambdaAuthorizedDataSource.Name

  ApiGatewayGraphQLAuthorizedIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      IntegrationType: HTTP_PROXY
      IntegrationMethod: POST
      IntegrationUri: !GetAtt GraphQLApiAuthorized.GraphQLUrl
      PayloadFormatVersion: '1.0'
      Description: "API GW Integration with AppSync GraphQL APIs that require authorization."

  GetUserRouteGraphQL:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      RouteKey: 'POST /get_user'
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayGraphQLAuthorizedIntegration
  ###################################################################

  # APIs THAT DO NOT REQUIRE AUTHORIZATION ##########################
  GraphQLApiUnAuthorized:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub "${ProjectName}_GraphQL_AuthAlways"
      AuthenticationType: AWS_LAMBDA
      LambdaAuthorizerConfig:
        AuthorizerUri: !Ref LambdaAuthAlwaysArn
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLoggingServiceRole.Arn
        FieldLogLevel: INFO

  AppSchemaUnAuthorized:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLApiUnAuthorized.ApiId
      Definition: |
        type User {
          user_name: ID
          role: String
          password: String
        }

        type UserToken {
          user_name: ID
          token: String
        }

        type Mutation {
          createUser(user_name: ID!, role: String!, password: String!): User
        }

        type Query {
          login(user_name: ID!, password: String!): UserToken
        }

        schema {
          query: Query
          mutation: Mutation
        }

  LambdaUnAuthorizedDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApiUnAuthorized.ApiId
      Name: !Sub ${ProjectName}_LambdaUnAuthDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !Ref AppFunctionsArn

  ApiGatewayGraphQLUnAuthorizedIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      IntegrationType: HTTP_PROXY
      IntegrationMethod: POST
      IntegrationUri: !GetAtt GraphQLApiUnAuthorized.GraphQLUrl
      PayloadFormatVersion: '1.0'
      Description: "API GW Integration with AppSync GraphQL APIs that don't require authorization."

  CreateUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSchemaUnAuthorized
    Properties:
      ApiId: !GetAtt GraphQLApiUnAuthorized.ApiId
      TypeName: Mutation
      FieldName: createUser
      DataSourceName: !GetAtt LambdaDataSource.Name

  CreateUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSchemaUnAuthorized
    Properties:
      ApiId: !GetAtt GraphQLApiUnAuthorized.ApiId
      TypeName: Query
      FieldName: login
      DataSourceName: !GetAtt LambdaDataSource.Name

  CreateUserRouteGraphQL:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HTTPApiGWAppId
      RouteKey: 'POST /create_user'
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayGraphQLUnAuthorizedIntegration
  ###################################################################

Outputs:
  GraphQLApiWithAuth:
    Description: URL of the GraphQL APIs that require authorization.
    Value: !GetAtt GraphQLApiAuthorized.GraphQLUrl
  GraphQLApiWithoutAuth:
    Description: URL of the GraphQL API that do not require authorization.
    Value: !GetAtt GraphQLApiUnAuthorized.GraphQLUrl