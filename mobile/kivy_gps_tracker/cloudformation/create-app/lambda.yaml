AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: The template used for Lambda functions.

Parameters:
  VpcId:
    Type: String
    Description: The VPC that the service is running inside of
  DeploymentSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of deployment subnet ID's.
  ImageUrl:
    Type: String
    Description: The url of a docker image that contains the task application.
  LambdaSecurityGroup:
    Type: String

Resources:

  LambdaAuth:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'LambdaAuth'
      CodeUri: .
      Description: 'A Lambda Authorizer for API GateWay.'
      MemorySize: 128
      Timeout: 3
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      ImageUri: !Ref ImageUrl
      ImageConfig:
        Command:
          - lambda_function.lambda_handler_auth
      PackageType: Image
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - servicediscovery:*
                - ec2:*
                - cloudmap:*
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
      SnapStart:
        ApplyOn: None
      VpcConfig:
        SecurityGroupIds: [!Ref LambdaSecurityGroup]
        SubnetIds: !Ref DeploymentSubnetIds
        Ipv6AllowedForDualStack: false

  LambdaWebSoc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'LambdaWebSocket'
      CodeUri: .
      Description: 'A Lambda to proxy websocket requests.'
      MemorySize: 128
      Timeout: 3
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      ImageUri: !Ref ImageUrl
      ImageConfig:
        Command:
          - lambda_function.lambda_handler_websocket
      PackageType: Image
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - servicediscovery:*
                - ec2:*
                - cloudmap:*
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
        - Statement:
            - Effect: Allow
              Action:
                - execute-api:Invoke
                - execute-api:ManageConnections
              Resource: 'arn:aws:execute-api:*:*:*'
      SnapStart:
        ApplyOn: None
      VpcConfig:
        SecurityGroupIds: [!Ref LambdaSecurityGroup]
        SubnetIds: !Ref DeploymentSubnetIds
        Ipv6AllowedForDualStack: false

# -------------------------------------------------------------------------
# Information about the stack.
# -------------------------------------------------------------------------
Outputs:
  LambdaAuthArn:
    Description: Arn of Lambda function.
    Value: !GetAtt LambdaAuth.Arn
  LambdaWebsocketArn:
    Description: Arn of Lambda websocket handler.
    Value: !GetAtt LambdaWebSoc.Arn
  

